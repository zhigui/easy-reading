// Generated by CoffeeScript 1.6.3
var analysic, analysicTitle, analysisParagraphs, bodyHtml, getTitle, node, nodeIndex, paragraphs, startAnalysic, targetDiv, titleEl, toptitle;

bodyHtml = document.body.innerHTML;

targetDiv = null;

toptitle = null;

paragraphs = document.querySelectorAll("p");

analysisParagraphs = function() {
  var paragraph, _i, _len, _results;
  _results = [];
  for (_i = 0, _len = paragraphs.length; _i < _len; _i++) {
    paragraph = paragraphs[_i];
    _results.push(analysic(paragraph));
  }
  return _results;
};

analysic = function(p) {
  var parentEl;
  parentEl = p.parentNode;
  if (!parentEl.easyreading) {
    parentEl.easyreading = {
      score: 0
    };
    if (parentEl.className.match(/(comment|meta|footer|footnote)/)) {
      parentEl.easyreading.score -= 50;
    } else {
      if (parentEl.className.match(/((^|\\s)(post|hentry|entry[-]?(content|text|body)?|article[-]?(content|text|body)?)(\\s|$))/)) {
        parentEl.easyreading.score += 25;
      }
    }
    if (parentEl.id.match(/(comment|meta|footer|footnote)/)) {
      parentEl.easyreading.score -= 50;
    } else {
      if (parentEl.id.match(/((^|\\s)(post|hentry|entry[-]?(content|text|body)?|article[-]?(content|text|body)?)(\\s|$))/)) {
        parentEl.easyreading.score += 25;
      }
    }
  }
  if (parentEl.innerText.length > 10) {
    parentEl.easyreading.score++;
  }
  parentEl.easyreading.score += parentEl.innerText.split(",").length;
  return parentEl.easyreading.score += parentEl.innerText.split("ï¼Œ").length;
};

nodeIndex = 0;

titleEl = [];

toptitle = null;

while ((node = document.getElementsByTagName('*')[nodeIndex]) != null) {
  if (node.className.match(/(title)/) || node.id.match(/(title)/) || node.tagName.match(/(H1|H2|H3|H4|H5|H6)/)) {
    titleEl.push(node);
  }
  if (node.easyreading != null) {
    if ((targetDiv == null) || node.easyreading.score > targetDiv.easyreading.score) {
      targetDiv = node;
    }
  }
  nodeIndex++;
}

analysicTitle = function(t) {
  var head, style;
  t.titleScore = {
    score: 0
  };
  if (head = t.tagName.match(/H(\d)/)) {
    t.titleScore.score += 50 / Number(head[1]);
  }
  style = window.getComputedStyle(t);
  if (style['font-weight'] === 'bold' || style['font-weight'] === 'bolder') {
    t.titleScore.score += 10;
  }
  t.titleScore.score += Number(style['font-size'].match(/\d+/)[0]);
  if (t.parentNode.className.match(/(title)/) || t.parentNode.id.match(/(title)/)) {
    return t.titleScore += 10;
  }
};

getTitle = function() {
  var calnode, _i, _j, _len, _len1, _results;
  if (titleEl.length > 0) {
    for (_i = 0, _len = titleEl.length; _i < _len; _i++) {
      node = titleEl[_i];
      analysicTitle(node);
    }
    _results = [];
    for (_j = 0, _len1 = titleEl.length; _j < _len1; _j++) {
      calnode = titleEl[_j];
      if ((toptitle == null) || calnode.titleScore.score > toptitle.titleScore.score) {
        _results.push(toptitle = calnode);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  }
};

startAnalysic = function() {
  analysisParagraphs();
  nodeIndex = 0;
  titleEl = [];
  while ((node = document.getElementsByTagName('*')[nodeIndex]) != null) {
    if (node.className.match(/(title)/) || node.id.match(/(title)/) || node.tagName.match(/(H1|H2|H3|H4|H5|H6)/)) {
      titleEl.push(node);
    }
    if (node.easyreading != null) {
      if ((targetDiv == null) || node.easyreading.score > targetDiv.easyreading.score) {
        targetDiv = node;
      }
    }
    nodeIndex++;
  }
  return getTitle();
};
